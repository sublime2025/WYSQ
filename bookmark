<!DOCTYPE html>
<html lang="zh-CN">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>个人导航</title>
    <style>
        /* 保持原样的样式 */
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, sans-serif;
        }

        .search-container {
            background: #f8f9fa;
            padding: 10px 20px;
            text-align: center;
            border-bottom: 1px solid #dee2e6;
            position: fixed;
            width: 100%;
            top: 0;
            z-index: 100;
            height: 60px;
        }

        .search-box {
            max-width: 600px;
            margin: 0 auto;
            position: relative;
        }

        .search-input {
            width: 100%;
            padding: 8px 45px 8px 15px;
            border: 2px solid #e9ecef;
            border-radius: 20px;
            font-size: 16px;
            outline: none;
            transition: border-color 0.3s;
        }

        .search-input:focus {
            border-color: #007bff;
        }

        .top-nav {
            background: #343a40;
            padding: 0 20px;
            position: fixed;
            width: 100%;
            top: 60px;
            z-index: 99;
            height: 45px;
            text-align: center;
        }

        .top-nav ul {
            list-style: none;
            display: inline-flex;
            margin: 0;
            height: 100%;
        }

        .top-nav li {
            padding: 12px 20px;
            color: white;
            cursor: pointer;
            transition: background-color 0.3s;
            display: flex;
            align-items: center;
        }

        .top-nav li:hover {
            background-color: #495057;
        }

        .top-nav li.active {
            background-color: #007bff;
        }

        .main-container {
            display: flex;
            margin-top: 105px;
            min-height: calc(100vh - 105px);
        }

        .side-nav {
            width: 200px;
            background: #f8f9fa;
            padding: 20px 0;
            border-right: 1px solid #dee2e6;
            position: fixed;
            height: calc(100vh - 105px);
            overflow-y: auto;
        }

        .side-nav ul {
            list-style: none;
        }

        .side-nav li {
            padding: 10px 20px;
            cursor: pointer;
            transition: background-color 0.3s;
        }

        .side-nav li:hover {
            background-color: #e9ecef;
        }

        .side-nav li.active {
            background-color: #007bff;
            color: white;
        }

        .content {
            flex: 1;
            margin-left: 200px;
            margin-right: 200px;
            padding: 20px;
        }

        .website-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
            gap: 20px;
            padding: 20px;
        }

        .website-card {
            background: white;
            border: 1px solid #dee2e6;
            border-radius: 8px;
            padding: 15px;
            transition: transform 0.3s, box-shadow 0.3s;
        }

        .website-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(0,0,0,0.1);
        }

        .website-card h3 {
            margin-bottom: 10px;
            color: #212529;
        }

        .website-card p {
            color: #6c757d;
            margin-bottom: 15px;
            font-size: 14px;
        }

        .website-card a {
            color: #007bff;
            text-decoration: none;
            font-size: 14px;
        }

        .website-card a:hover {
            text-decoration: underline;
        }

        /* 替换右侧快捷链接为二级导航样式 */
        .right-side-nav {
            width: 200px;
            background: #f8f9fa;
            padding: 20px 0;
            border-left: 1px solid #dee2e6;
            position: fixed;
            height: calc(100vh - 105px);
            overflow-y: auto;
            right: 0;
            top: 105px;
        }

        .right-side-nav ul {
            list-style: none;
        }

        .right-side-nav li {
            padding: 10px 20px;
            cursor: pointer;
            transition: background-color 0.3s;
        }

        .right-side-nav li:hover {
            background-color: #e9ecef;
        }

        .right-side-nav li.active {
            background-color: #007bff;
            color: white;
        }
    </style>
</head>
<body>
    <div class="search-container">
        <div class="search-box">
            <input type="text" class="search-input" placeholder="搜索网站...">
        </div>
    </div>

    <nav class="top-nav">
        <ul id="topNav">
            <!-- 一级导航将通过 JavaScript 动态生成 -->
        </ul>
    </nav>

    <div class="main-container">
        <nav class="side-nav">
            <ul id="sideNav">
                <!-- 二级导航将通过 JavaScript 动态生成 -->
            </ul>
        </nav>

        <main class="content">
            <div class="website-grid" id="websiteGrid">
                <!-- 网站卡片将通过 JavaScript 动态生成 -->
            </div>
        </main>

        <aside class="right-side-nav">
            <ul id="rightSideNav">
                <!-- 替换右侧为二级导航风格 -->
            </ul>
        </aside>
    </div>

    <script>
        // 初始化右侧导航，模仿左侧导航结构
        const rightNavigationData = [
            "YouTube",
            "Telegram",
            "Twitter",
            "GitHub"
        ];

        const rightSideNav = document.getElementById('rightSideNav');
        rightNavigationData.forEach((item, index) => {
            const li = document.createElement('li');
            li.textContent = item;
            if (index === 0) li.classList.add('active');
            rightSideNav.appendChild(li);

            li.addEventListener('click', () => {
                rightSideNav.querySelectorAll('li').forEach(item => item.classList.remove('active'));
                li.classList.add('active');
            });
        });

        // 保持原有的 JavaScript 不变
        const navigationData = {
            "开发工具": {
                subcategories: {
                    "代码托管": [
                        { name: "GitHub", url: "https://github.com", description: "全球最大的代码托管平台，开源项目的聚集地" },
                        { name: "GitLab", url: "https://gitlab.com", description: "提供完整的DevOps平台，支持私有部署" }
                    ],
                    "开发文档": [
                        { name: "MDN Web Docs", url: "https://developer.mozilla.org", description: "最全面的Web开发文档" },
                        { name: "DevDocs", url: "https://devdocs.io", description: "汇集各种开发文档的平台" }
                    ]
                }
            },
            "设计资源": {
                subcategories: {
                    "设计素材": [
                        { name: "Dribbble", url: "https://dribbble.com", description: "优秀设计作品分享平台" },
                        { name: "Behance", url: "https://www.behance.net", description: "创意设计师社区" }
                    ],
                    "图标资源": [
                        { name: "IconFont", url: "https://www.iconfont.cn", description: "阿里巴巴矢量图标库" },
                        { name: "FontAwesome", url: "https://fontawesome.com", description: "流行的图标字体库" }
                    ]
                }
            }
        };

        function initializePage() {
            const topNav = document.getElementById('topNav');
            Object.keys(navigationData).forEach((category, index) => {
                const li = document.createElement('li');
                li.textContent = category;
                if (index === 0) li.classList.add('active');
                topNav.appendChild(li);
            });

            updateContent(Object.keys(navigationData)[0]);
        }

        function updateContent(category) {
            const sideNav = document.getElementById('sideNav');
            sideNav.innerHTML = '';

            const subcategories = navigationData[category].subcategories;
            Object.keys(subcategories).forEach((subcat, index) => {
                const li = document.createElement('li');
                li.textContent = subcat;
                if (index === 0) li.classList.add('active');
                sideNav.appendChild(li);

                li.addEventListener('click', () => {
                    updateWebsites(category, subcat);
                    sideNav.querySelectorAll('li').forEach(item => item.classList.remove('active'));
                    li.classList.add('active');
                });
            });

            updateWebsites(category, Object.keys(subcategories)[0]);
        }

        function updateWebsites(category, subcategory) {
            const websiteGrid = document.getElementById('websiteGrid');
            websiteGrid.innerHTML = '';

            const websites = navigationData[category].subcategories[subcategory];
            websites.forEach(site => {
                const card = document.createElement('div');
                card.className = 'website-card';
                card.innerHTML = `
                    <h3>${site.name}</h3>
                    <p>${site.description}</p>
                    <a href="${site.url}" target="_blank">访问网站</a>
                `;
                websiteGrid.appendChild(card);
            });
        }

        document.getElementById('topNav').addEventListener('click', (e) => {
            if (e.target.tagName === 'LI') {
                const category = e.target.textContent;
                updateContent(category);
                e.target.parentElement.querySelectorAll('li').forEach(item => item.classList.remove('active'));
                e.target.classList.add('active');
            }
        });

        document.querySelector('.search-input').addEventListener('input', (e) => {
            const searchTerm = e.target.value.toLowerCase();
            const cards = document.querySelectorAll('.website-card');

            cards.forEach(card => {
                const title = card.querySelector('h3').textContent.toLowerCase();
                const description = card.querySelector('p').textContent.toLowerCase();

                if (title.includes(searchTerm) || description.includes(searchTerm)) {
                    card.style.display = '';
                } else {
                    card.style.display = 'none';
                }
            });
        });

        initializePage();
    </script>
</body>
</html>
